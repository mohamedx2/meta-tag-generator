{"ast":null,"code":"import { LocalMetaGenerator } from '../utils/LocalMetaGenerator';\nexport class MetaAIService {\n  // Remove OpenAI initialization\n\n  static async generateMetaSuggestions(content) {\n    try {\n      // Use local generation for now\n      return this.generateLocalMetaTags(content);\n\n      /* Commented out OpenAI implementation for later use\r\n      if (process.env.REACT_APP_USE_OPENAI === 'true') {\r\n        const completion = await this.openai.chat.completions.create({\r\n          // ...existing code...\r\n        });\r\n        return JSON.parse(completion.choices[0].message.content || '{}');\r\n      }\r\n      */\n    } catch (error) {\n      console.warn('Using local meta tag generation:', error);\n      return this.generateLocalMetaTags(content);\n    }\n  }\n  static generateLocalMetaTags(content) {\n    return LocalMetaGenerator.generateMetaTags(content);\n  }\n  static extractContentFromComponent(element) {\n    return element.innerText || element.textContent || '';\n  }\n}","map":{"version":3,"names":["LocalMetaGenerator","MetaAIService","generateMetaSuggestions","content","generateLocalMetaTags","error","console","warn","generateMetaTags","extractContentFromComponent","element","innerText","textContent"],"sources":["C:/Users/hamro/Documents/work/meta/src/services/MetaAIService.ts"],"sourcesContent":["import { LocalMetaGenerator } from '../utils/LocalMetaGenerator';\r\n\r\nexport class MetaAIService {\r\n  // Remove OpenAI initialization\r\n  \r\n  static async generateMetaSuggestions(content: string) {\r\n    try {\r\n      // Use local generation for now\r\n      return this.generateLocalMetaTags(content);\r\n      \r\n      /* Commented out OpenAI implementation for later use\r\n      if (process.env.REACT_APP_USE_OPENAI === 'true') {\r\n        const completion = await this.openai.chat.completions.create({\r\n          // ...existing code...\r\n        });\r\n        return JSON.parse(completion.choices[0].message.content || '{}');\r\n      }\r\n      */\r\n    } catch (error) {\r\n      console.warn('Using local meta tag generation:', error);\r\n      return this.generateLocalMetaTags(content);\r\n    }\r\n  }\r\n\r\n  private static generateLocalMetaTags(content: string) {\r\n    return LocalMetaGenerator.generateMetaTags(content);\r\n  }\r\n\r\n  static extractContentFromComponent(element: HTMLElement): string {\r\n    return element.innerText || element.textContent || '';\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,6BAA6B;AAEhE,OAAO,MAAMC,aAAa,CAAC;EACzB;;EAEA,aAAaC,uBAAuBA,CAACC,OAAe,EAAE;IACpD,IAAI;MACF;MACA,OAAO,IAAI,CAACC,qBAAqB,CAACD,OAAO,CAAC;;MAE1C;AACN;AACA;AACA;AACA;AACA;AACA;AACA;IACI,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACC,IAAI,CAAC,kCAAkC,EAAEF,KAAK,CAAC;MACvD,OAAO,IAAI,CAACD,qBAAqB,CAACD,OAAO,CAAC;IAC5C;EACF;EAEA,OAAeC,qBAAqBA,CAACD,OAAe,EAAE;IACpD,OAAOH,kBAAkB,CAACQ,gBAAgB,CAACL,OAAO,CAAC;EACrD;EAEA,OAAOM,2BAA2BA,CAACC,OAAoB,EAAU;IAC/D,OAAOA,OAAO,CAACC,SAAS,IAAID,OAAO,CAACE,WAAW,IAAI,EAAE;EACvD;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}