{"ast":null,"code":"import OpenAI from 'openai';\nimport { LocalMetaGenerator } from '../utils/LocalMetaGenerator';\nexport class MetaAIService {\n  static async generateMetaSuggestions(content) {\n    try {\n      if (!process.env.REACT_APP_OPENAI_API_KEY) {\n        return this.generateLocalMetaTags(content);\n      }\n      const completion = await this.openai.chat.completions.create({\n        messages: [{\n          role: \"system\",\n          content: \"Generate SEO meta tags based on the following content. Return JSON with title, description, and keywords.\"\n        }, {\n          role: \"user\",\n          content: content\n        }],\n        model: \"gpt-3.5-turbo\"\n      });\n      const result = JSON.parse(completion.choices[0].message.content || '{}');\n      return result;\n    } catch (error) {\n      console.warn('Falling back to local meta tag generation:', error);\n      return this.generateLocalMetaTags(content);\n    }\n  }\n  static generateLocalMetaTags(content) {\n    return LocalMetaGenerator.generateMetaTags(content);\n  }\n  static extractContentFromComponent(element) {\n    return element.innerText || element.textContent || '';\n  }\n}\nMetaAIService.openai = new OpenAI({\n  apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n  dangerouslyAllowBrowser: true\n});","map":{"version":3,"names":["OpenAI","LocalMetaGenerator","MetaAIService","generateMetaSuggestions","content","process","env","REACT_APP_OPENAI_API_KEY","generateLocalMetaTags","completion","openai","chat","completions","create","messages","role","model","result","JSON","parse","choices","message","error","console","warn","generateMetaTags","extractContentFromComponent","element","innerText","textContent","apiKey","dangerouslyAllowBrowser"],"sources":["C:/Users/hamro/Documents/work/meta/src/services/MetaAIService.ts"],"sourcesContent":["import OpenAI from 'openai';\r\nimport { LocalMetaGenerator } from '../utils/LocalMetaGenerator';\r\n\r\nexport class MetaAIService {\r\n  private static openai = new OpenAI({\r\n    apiKey: process.env.REACT_APP_OPENAI_API_KEY,\r\n    dangerouslyAllowBrowser: true\r\n  });\r\n\r\n  static async generateMetaSuggestions(content: string) {\r\n    try {\r\n      if (!process.env.REACT_APP_OPENAI_API_KEY) {\r\n        return this.generateLocalMetaTags(content);\r\n      }\r\n\r\n      const completion = await this.openai.chat.completions.create({\r\n        messages: [{\r\n          role: \"system\",\r\n          content: \"Generate SEO meta tags based on the following content. Return JSON with title, description, and keywords.\"\r\n        }, {\r\n          role: \"user\",\r\n          content: content\r\n        }],\r\n        model: \"gpt-3.5-turbo\",\r\n      });\r\n\r\n      const result = JSON.parse(completion.choices[0].message.content || '{}');\r\n      return result;\r\n    } catch (error) {\r\n      console.warn('Falling back to local meta tag generation:', error);\r\n      return this.generateLocalMetaTags(content);\r\n    }\r\n  }\r\n\r\n  private static generateLocalMetaTags(content: string) {\r\n    return LocalMetaGenerator.generateMetaTags(content);\r\n  }\r\n\r\n  static extractContentFromComponent(element: HTMLElement): string {\r\n    return element.innerText || element.textContent || '';\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,QAAQ;AAC3B,SAASC,kBAAkB,QAAQ,6BAA6B;AAEhE,OAAO,MAAMC,aAAa,CAAC;EAMzB,aAAaC,uBAAuBA,CAACC,OAAe,EAAE;IACpD,IAAI;MACF,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,wBAAwB,EAAE;QACzC,OAAO,IAAI,CAACC,qBAAqB,CAACJ,OAAO,CAAC;MAC5C;MAEA,MAAMK,UAAU,GAAG,MAAM,IAAI,CAACC,MAAM,CAACC,IAAI,CAACC,WAAW,CAACC,MAAM,CAAC;QAC3DC,QAAQ,EAAE,CAAC;UACTC,IAAI,EAAE,QAAQ;UACdX,OAAO,EAAE;QACX,CAAC,EAAE;UACDW,IAAI,EAAE,MAAM;UACZX,OAAO,EAAEA;QACX,CAAC,CAAC;QACFY,KAAK,EAAE;MACT,CAAC,CAAC;MAEF,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACV,UAAU,CAACW,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACjB,OAAO,IAAI,IAAI,CAAC;MACxE,OAAOa,MAAM;IACf,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACC,IAAI,CAAC,4CAA4C,EAAEF,KAAK,CAAC;MACjE,OAAO,IAAI,CAACd,qBAAqB,CAACJ,OAAO,CAAC;IAC5C;EACF;EAEA,OAAeI,qBAAqBA,CAACJ,OAAe,EAAE;IACpD,OAAOH,kBAAkB,CAACwB,gBAAgB,CAACrB,OAAO,CAAC;EACrD;EAEA,OAAOsB,2BAA2BA,CAACC,OAAoB,EAAU;IAC/D,OAAOA,OAAO,CAACC,SAAS,IAAID,OAAO,CAACE,WAAW,IAAI,EAAE;EACvD;AACF;AAtCa3B,aAAa,CACTQ,MAAM,GAAG,IAAIV,MAAM,CAAC;EACjC8B,MAAM,EAAEzB,OAAO,CAACC,GAAG,CAACC,wBAAwB;EAC5CwB,uBAAuB,EAAE;AAC3B,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}